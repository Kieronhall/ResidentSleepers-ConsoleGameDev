//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Samples/4ControllerSample/Controls/GamepadControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace InputSample
{
    public partial class @GamepadControls: IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }
        public @GamepadControls()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""GamepadControls"",
    ""maps"": [
        {
            ""name"": ""Main"",
            ""id"": ""1f4482e0-0ea3-423f-a106-25f890693718"",
            ""actions"": [
                {
                    ""name"": ""Press Triangle"",
                    ""type"": ""Button"",
                    ""id"": ""373737f7-216b-4589-b0d0-f7a451209fb5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Press Circle"",
                    ""type"": ""Button"",
                    ""id"": ""a832638e-ecb0-476f-81d0-3b6e7895a901"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Press Square"",
                    ""type"": ""Button"",
                    ""id"": ""f37a62a6-c0d3-4355-b5e5-8168157720fa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Press Cross"",
                    ""type"": ""Button"",
                    ""id"": ""3c967a11-4c52-4201-ab39-e39dacdff156"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dpad"",
                    ""type"": ""Value"",
                    ""id"": ""0ff3702a-0cd0-4268-9a46-1c5908370267"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Press Share"",
                    ""type"": ""Button"",
                    ""id"": ""45a4dac0-60ca-4587-8f38-5945dbdcad2c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Press Options"",
                    ""type"": ""Button"",
                    ""id"": ""99965a92-2161-4c45-9d3f-af0ac408f100"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Press Playstation Button"",
                    ""type"": ""Button"",
                    ""id"": ""a10ba43c-0471-4ff2-b1b8-57349073630c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Press Left Stick"",
                    ""type"": ""Button"",
                    ""id"": ""6c5bfad7-4d9e-40cc-b6a4-51b6ab824ab8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Press Right Stick"",
                    ""type"": ""Button"",
                    ""id"": ""21479c52-1a4b-49e3-b93f-05bc010e1607"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Left Stick Pos"",
                    ""type"": ""Value"",
                    ""id"": ""14bc6369-7f6b-425f-82f4-4119955b940f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Right Stick Pos"",
                    ""type"": ""Value"",
                    ""id"": ""4df5cec8-b4d7-4094-8e10-fc0281d0875f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Press Touchpad"",
                    ""type"": ""Button"",
                    ""id"": ""a6ac6068-3326-4b8c-bf8d-a5bf56e78d0a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Touchpad Touch 0"",
                    ""type"": ""Value"",
                    ""id"": ""95e1a408-7ec1-4151-aea2-d6dd21f70908"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Touchpad Touch 1"",
                    ""type"": ""Value"",
                    ""id"": ""51b07f93-8f5b-4659-96e8-0cc55cec7df6"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Left Bumper"",
                    ""type"": ""Button"",
                    ""id"": ""e0fc4c1d-3ed0-48ab-b60b-ab42285e13cd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Right Bumper"",
                    ""type"": ""Button"",
                    ""id"": ""b82f8377-bbe4-4d17-82bb-355fec6f0ae5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Left Trigger"",
                    ""type"": ""Value"",
                    ""id"": ""30a2157c-5fcd-4c07-a070-b03ed7f18254"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Right Trigger"",
                    ""type"": ""Value"",
                    ""id"": ""09394738-6b8e-4093-bc8e-4a23bc7d122e"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""27f2e3c9-ac89-4fab-9fca-fe0c258862dc"",
                    ""path"": ""<DualShockGamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PS4"",
                    ""action"": ""Press Triangle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b73c9e6b-b674-4e96-b496-7976d896f1f7"",
                    ""path"": ""<DualShockGamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PS4"",
                    ""action"": ""Press Circle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d341168c-0c8b-452d-9329-f2154ec7f16c"",
                    ""path"": ""<DualShockGamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PS4"",
                    ""action"": ""Press Square"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""77a9e659-93e5-4f64-9749-ad037de20039"",
                    ""path"": ""<DualShockGamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PS4"",
                    ""action"": ""Press Cross"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4f6ef601-c551-47f2-95ec-abcb42844c46"",
                    ""path"": ""<DualShockGamepad>/dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PS4"",
                    ""action"": ""Dpad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""91cba02b-00c0-45a0-b24b-421237496268"",
                    ""path"": ""<DualShockGamepad>/select"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PS4"",
                    ""action"": ""Press Share"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""57f7cd17-3ce6-4bf9-9799-6c03e50f721b"",
                    ""path"": ""<DualShockGamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PS4"",
                    ""action"": ""Press Options"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""73e34d44-6847-4234-9618-c59c4458d55f"",
                    ""path"": ""<DualShockGamepad>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PS4"",
                    ""action"": ""Press Left Stick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bcb30059-addb-422e-8b51-d27b18ef83b7"",
                    ""path"": ""<DualShockGamepad>/rightStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PS4"",
                    ""action"": ""Press Right Stick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""961ab2d7-3e2a-4193-9824-afbf38c4e0b5"",
                    ""path"": ""<DualShockGamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PS4"",
                    ""action"": ""Left Stick Pos"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1088c3c3-d130-49fc-836d-003f215539f8"",
                    ""path"": ""<DualShockGamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PS4"",
                    ""action"": ""Right Stick Pos"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ab331dca-eac9-4b8e-a147-971b78e5b19f"",
                    ""path"": ""<DualShockGamepad>/touchpadButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PS4"",
                    ""action"": ""Press Touchpad"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""568d591a-1aba-495f-aa1b-3346e6a74511"",
                    ""path"": ""<PS4DualShockGamepad>/touch0/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PS4"",
                    ""action"": ""Touchpad Touch 0"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cb66707e-2c29-48e9-98db-4926f2d916b8"",
                    ""path"": ""<PS4DualShockGamepad>/touch1/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PS4"",
                    ""action"": ""Touchpad Touch 1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a5c2e08c-9d1a-40e7-83d1-5a21e86b23ef"",
                    ""path"": ""<DualShockGamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PS4"",
                    ""action"": ""Left Bumper"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5f1b74ee-07ca-4668-a8c8-4270eeffb03c"",
                    ""path"": ""<DualShockGamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PS4"",
                    ""action"": ""Left Trigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c369e149-e2f6-4610-81af-d93631f464dc"",
                    ""path"": ""<DualShockGamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PS4"",
                    ""action"": ""Right Trigger"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""357fd0c2-0b1a-40d0-9170-c4aaa7df2337"",
                    ""path"": ""<DualShockGamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""PS4"",
                    ""action"": ""Right Bumper"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""PC"",
            ""bindingGroup"": ""PC"",
            ""devices"": [
                {
                    ""devicePath"": ""<PS5DualSenseGamepad>/{Back}"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""PS5"",
            ""bindingGroup"": ""PS5"",
            ""devices"": [
                {
                    ""devicePath"": ""<PS5DualSenseGamepad>/{Back}"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""PS4"",
            ""bindingGroup"": ""PS4"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
            // Main
            m_Main = asset.FindActionMap("Main", throwIfNotFound: true);
            m_Main_PressTriangle = m_Main.FindAction("Press Triangle", throwIfNotFound: true);
            m_Main_PressCircle = m_Main.FindAction("Press Circle", throwIfNotFound: true);
            m_Main_PressSquare = m_Main.FindAction("Press Square", throwIfNotFound: true);
            m_Main_PressCross = m_Main.FindAction("Press Cross", throwIfNotFound: true);
            m_Main_Dpad = m_Main.FindAction("Dpad", throwIfNotFound: true);
            m_Main_PressShare = m_Main.FindAction("Press Share", throwIfNotFound: true);
            m_Main_PressOptions = m_Main.FindAction("Press Options", throwIfNotFound: true);
            m_Main_PressPlaystationButton = m_Main.FindAction("Press Playstation Button", throwIfNotFound: true);
            m_Main_PressLeftStick = m_Main.FindAction("Press Left Stick", throwIfNotFound: true);
            m_Main_PressRightStick = m_Main.FindAction("Press Right Stick", throwIfNotFound: true);
            m_Main_LeftStickPos = m_Main.FindAction("Left Stick Pos", throwIfNotFound: true);
            m_Main_RightStickPos = m_Main.FindAction("Right Stick Pos", throwIfNotFound: true);
            m_Main_PressTouchpad = m_Main.FindAction("Press Touchpad", throwIfNotFound: true);
            m_Main_TouchpadTouch0 = m_Main.FindAction("Touchpad Touch 0", throwIfNotFound: true);
            m_Main_TouchpadTouch1 = m_Main.FindAction("Touchpad Touch 1", throwIfNotFound: true);
            m_Main_LeftBumper = m_Main.FindAction("Left Bumper", throwIfNotFound: true);
            m_Main_RightBumper = m_Main.FindAction("Right Bumper", throwIfNotFound: true);
            m_Main_LeftTrigger = m_Main.FindAction("Left Trigger", throwIfNotFound: true);
            m_Main_RightTrigger = m_Main.FindAction("Right Trigger", throwIfNotFound: true);
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }

        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
        {
            return asset.FindAction(actionNameOrId, throwIfNotFound);
        }

        public int FindBinding(InputBinding bindingMask, out InputAction action)
        {
            return asset.FindBinding(bindingMask, out action);
        }

        // Main
        private readonly InputActionMap m_Main;
        private List<IMainActions> m_MainActionsCallbackInterfaces = new List<IMainActions>();
        private readonly InputAction m_Main_PressTriangle;
        private readonly InputAction m_Main_PressCircle;
        private readonly InputAction m_Main_PressSquare;
        private readonly InputAction m_Main_PressCross;
        private readonly InputAction m_Main_Dpad;
        private readonly InputAction m_Main_PressShare;
        private readonly InputAction m_Main_PressOptions;
        private readonly InputAction m_Main_PressPlaystationButton;
        private readonly InputAction m_Main_PressLeftStick;
        private readonly InputAction m_Main_PressRightStick;
        private readonly InputAction m_Main_LeftStickPos;
        private readonly InputAction m_Main_RightStickPos;
        private readonly InputAction m_Main_PressTouchpad;
        private readonly InputAction m_Main_TouchpadTouch0;
        private readonly InputAction m_Main_TouchpadTouch1;
        private readonly InputAction m_Main_LeftBumper;
        private readonly InputAction m_Main_RightBumper;
        private readonly InputAction m_Main_LeftTrigger;
        private readonly InputAction m_Main_RightTrigger;
        public struct MainActions
        {
            private @GamepadControls m_Wrapper;
            public MainActions(@GamepadControls wrapper) { m_Wrapper = wrapper; }
            public InputAction @PressTriangle => m_Wrapper.m_Main_PressTriangle;
            public InputAction @PressCircle => m_Wrapper.m_Main_PressCircle;
            public InputAction @PressSquare => m_Wrapper.m_Main_PressSquare;
            public InputAction @PressCross => m_Wrapper.m_Main_PressCross;
            public InputAction @Dpad => m_Wrapper.m_Main_Dpad;
            public InputAction @PressShare => m_Wrapper.m_Main_PressShare;
            public InputAction @PressOptions => m_Wrapper.m_Main_PressOptions;
            public InputAction @PressPlaystationButton => m_Wrapper.m_Main_PressPlaystationButton;
            public InputAction @PressLeftStick => m_Wrapper.m_Main_PressLeftStick;
            public InputAction @PressRightStick => m_Wrapper.m_Main_PressRightStick;
            public InputAction @LeftStickPos => m_Wrapper.m_Main_LeftStickPos;
            public InputAction @RightStickPos => m_Wrapper.m_Main_RightStickPos;
            public InputAction @PressTouchpad => m_Wrapper.m_Main_PressTouchpad;
            public InputAction @TouchpadTouch0 => m_Wrapper.m_Main_TouchpadTouch0;
            public InputAction @TouchpadTouch1 => m_Wrapper.m_Main_TouchpadTouch1;
            public InputAction @LeftBumper => m_Wrapper.m_Main_LeftBumper;
            public InputAction @RightBumper => m_Wrapper.m_Main_RightBumper;
            public InputAction @LeftTrigger => m_Wrapper.m_Main_LeftTrigger;
            public InputAction @RightTrigger => m_Wrapper.m_Main_RightTrigger;
            public InputActionMap Get() { return m_Wrapper.m_Main; }
            public void Enable() { Get().Enable(); }
            public void Disable() { Get().Disable(); }
            public bool enabled => Get().enabled;
            public static implicit operator InputActionMap(MainActions set) { return set.Get(); }
            public void AddCallbacks(IMainActions instance)
            {
                if (instance == null || m_Wrapper.m_MainActionsCallbackInterfaces.Contains(instance)) return;
                m_Wrapper.m_MainActionsCallbackInterfaces.Add(instance);
                @PressTriangle.started += instance.OnPressTriangle;
                @PressTriangle.performed += instance.OnPressTriangle;
                @PressTriangle.canceled += instance.OnPressTriangle;
                @PressCircle.started += instance.OnPressCircle;
                @PressCircle.performed += instance.OnPressCircle;
                @PressCircle.canceled += instance.OnPressCircle;
                @PressSquare.started += instance.OnPressSquare;
                @PressSquare.performed += instance.OnPressSquare;
                @PressSquare.canceled += instance.OnPressSquare;
                @PressCross.started += instance.OnPressCross;
                @PressCross.performed += instance.OnPressCross;
                @PressCross.canceled += instance.OnPressCross;
                @Dpad.started += instance.OnDpad;
                @Dpad.performed += instance.OnDpad;
                @Dpad.canceled += instance.OnDpad;
                @PressShare.started += instance.OnPressShare;
                @PressShare.performed += instance.OnPressShare;
                @PressShare.canceled += instance.OnPressShare;
                @PressOptions.started += instance.OnPressOptions;
                @PressOptions.performed += instance.OnPressOptions;
                @PressOptions.canceled += instance.OnPressOptions;
                @PressPlaystationButton.started += instance.OnPressPlaystationButton;
                @PressPlaystationButton.performed += instance.OnPressPlaystationButton;
                @PressPlaystationButton.canceled += instance.OnPressPlaystationButton;
                @PressLeftStick.started += instance.OnPressLeftStick;
                @PressLeftStick.performed += instance.OnPressLeftStick;
                @PressLeftStick.canceled += instance.OnPressLeftStick;
                @PressRightStick.started += instance.OnPressRightStick;
                @PressRightStick.performed += instance.OnPressRightStick;
                @PressRightStick.canceled += instance.OnPressRightStick;
                @LeftStickPos.started += instance.OnLeftStickPos;
                @LeftStickPos.performed += instance.OnLeftStickPos;
                @LeftStickPos.canceled += instance.OnLeftStickPos;
                @RightStickPos.started += instance.OnRightStickPos;
                @RightStickPos.performed += instance.OnRightStickPos;
                @RightStickPos.canceled += instance.OnRightStickPos;
                @PressTouchpad.started += instance.OnPressTouchpad;
                @PressTouchpad.performed += instance.OnPressTouchpad;
                @PressTouchpad.canceled += instance.OnPressTouchpad;
                @TouchpadTouch0.started += instance.OnTouchpadTouch0;
                @TouchpadTouch0.performed += instance.OnTouchpadTouch0;
                @TouchpadTouch0.canceled += instance.OnTouchpadTouch0;
                @TouchpadTouch1.started += instance.OnTouchpadTouch1;
                @TouchpadTouch1.performed += instance.OnTouchpadTouch1;
                @TouchpadTouch1.canceled += instance.OnTouchpadTouch1;
                @LeftBumper.started += instance.OnLeftBumper;
                @LeftBumper.performed += instance.OnLeftBumper;
                @LeftBumper.canceled += instance.OnLeftBumper;
                @RightBumper.started += instance.OnRightBumper;
                @RightBumper.performed += instance.OnRightBumper;
                @RightBumper.canceled += instance.OnRightBumper;
                @LeftTrigger.started += instance.OnLeftTrigger;
                @LeftTrigger.performed += instance.OnLeftTrigger;
                @LeftTrigger.canceled += instance.OnLeftTrigger;
                @RightTrigger.started += instance.OnRightTrigger;
                @RightTrigger.performed += instance.OnRightTrigger;
                @RightTrigger.canceled += instance.OnRightTrigger;
            }

            private void UnregisterCallbacks(IMainActions instance)
            {
                @PressTriangle.started -= instance.OnPressTriangle;
                @PressTriangle.performed -= instance.OnPressTriangle;
                @PressTriangle.canceled -= instance.OnPressTriangle;
                @PressCircle.started -= instance.OnPressCircle;
                @PressCircle.performed -= instance.OnPressCircle;
                @PressCircle.canceled -= instance.OnPressCircle;
                @PressSquare.started -= instance.OnPressSquare;
                @PressSquare.performed -= instance.OnPressSquare;
                @PressSquare.canceled -= instance.OnPressSquare;
                @PressCross.started -= instance.OnPressCross;
                @PressCross.performed -= instance.OnPressCross;
                @PressCross.canceled -= instance.OnPressCross;
                @Dpad.started -= instance.OnDpad;
                @Dpad.performed -= instance.OnDpad;
                @Dpad.canceled -= instance.OnDpad;
                @PressShare.started -= instance.OnPressShare;
                @PressShare.performed -= instance.OnPressShare;
                @PressShare.canceled -= instance.OnPressShare;
                @PressOptions.started -= instance.OnPressOptions;
                @PressOptions.performed -= instance.OnPressOptions;
                @PressOptions.canceled -= instance.OnPressOptions;
                @PressPlaystationButton.started -= instance.OnPressPlaystationButton;
                @PressPlaystationButton.performed -= instance.OnPressPlaystationButton;
                @PressPlaystationButton.canceled -= instance.OnPressPlaystationButton;
                @PressLeftStick.started -= instance.OnPressLeftStick;
                @PressLeftStick.performed -= instance.OnPressLeftStick;
                @PressLeftStick.canceled -= instance.OnPressLeftStick;
                @PressRightStick.started -= instance.OnPressRightStick;
                @PressRightStick.performed -= instance.OnPressRightStick;
                @PressRightStick.canceled -= instance.OnPressRightStick;
                @LeftStickPos.started -= instance.OnLeftStickPos;
                @LeftStickPos.performed -= instance.OnLeftStickPos;
                @LeftStickPos.canceled -= instance.OnLeftStickPos;
                @RightStickPos.started -= instance.OnRightStickPos;
                @RightStickPos.performed -= instance.OnRightStickPos;
                @RightStickPos.canceled -= instance.OnRightStickPos;
                @PressTouchpad.started -= instance.OnPressTouchpad;
                @PressTouchpad.performed -= instance.OnPressTouchpad;
                @PressTouchpad.canceled -= instance.OnPressTouchpad;
                @TouchpadTouch0.started -= instance.OnTouchpadTouch0;
                @TouchpadTouch0.performed -= instance.OnTouchpadTouch0;
                @TouchpadTouch0.canceled -= instance.OnTouchpadTouch0;
                @TouchpadTouch1.started -= instance.OnTouchpadTouch1;
                @TouchpadTouch1.performed -= instance.OnTouchpadTouch1;
                @TouchpadTouch1.canceled -= instance.OnTouchpadTouch1;
                @LeftBumper.started -= instance.OnLeftBumper;
                @LeftBumper.performed -= instance.OnLeftBumper;
                @LeftBumper.canceled -= instance.OnLeftBumper;
                @RightBumper.started -= instance.OnRightBumper;
                @RightBumper.performed -= instance.OnRightBumper;
                @RightBumper.canceled -= instance.OnRightBumper;
                @LeftTrigger.started -= instance.OnLeftTrigger;
                @LeftTrigger.performed -= instance.OnLeftTrigger;
                @LeftTrigger.canceled -= instance.OnLeftTrigger;
                @RightTrigger.started -= instance.OnRightTrigger;
                @RightTrigger.performed -= instance.OnRightTrigger;
                @RightTrigger.canceled -= instance.OnRightTrigger;
            }

            public void RemoveCallbacks(IMainActions instance)
            {
                if (m_Wrapper.m_MainActionsCallbackInterfaces.Remove(instance))
                    UnregisterCallbacks(instance);
            }

            public void SetCallbacks(IMainActions instance)
            {
                foreach (var item in m_Wrapper.m_MainActionsCallbackInterfaces)
                    UnregisterCallbacks(item);
                m_Wrapper.m_MainActionsCallbackInterfaces.Clear();
                AddCallbacks(instance);
            }
        }
        public MainActions @Main => new MainActions(this);
        private int m_PCSchemeIndex = -1;
        public InputControlScheme PCScheme
        {
            get
            {
                if (m_PCSchemeIndex == -1) m_PCSchemeIndex = asset.FindControlSchemeIndex("PC");
                return asset.controlSchemes[m_PCSchemeIndex];
            }
        }
        private int m_PS5SchemeIndex = -1;
        public InputControlScheme PS5Scheme
        {
            get
            {
                if (m_PS5SchemeIndex == -1) m_PS5SchemeIndex = asset.FindControlSchemeIndex("PS5");
                return asset.controlSchemes[m_PS5SchemeIndex];
            }
        }
        private int m_PS4SchemeIndex = -1;
        public InputControlScheme PS4Scheme
        {
            get
            {
                if (m_PS4SchemeIndex == -1) m_PS4SchemeIndex = asset.FindControlSchemeIndex("PS4");
                return asset.controlSchemes[m_PS4SchemeIndex];
            }
        }
        public interface IMainActions
        {
            void OnPressTriangle(InputAction.CallbackContext context);
            void OnPressCircle(InputAction.CallbackContext context);
            void OnPressSquare(InputAction.CallbackContext context);
            void OnPressCross(InputAction.CallbackContext context);
            void OnDpad(InputAction.CallbackContext context);
            void OnPressShare(InputAction.CallbackContext context);
            void OnPressOptions(InputAction.CallbackContext context);
            void OnPressPlaystationButton(InputAction.CallbackContext context);
            void OnPressLeftStick(InputAction.CallbackContext context);
            void OnPressRightStick(InputAction.CallbackContext context);
            void OnLeftStickPos(InputAction.CallbackContext context);
            void OnRightStickPos(InputAction.CallbackContext context);
            void OnPressTouchpad(InputAction.CallbackContext context);
            void OnTouchpadTouch0(InputAction.CallbackContext context);
            void OnTouchpadTouch1(InputAction.CallbackContext context);
            void OnLeftBumper(InputAction.CallbackContext context);
            void OnRightBumper(InputAction.CallbackContext context);
            void OnLeftTrigger(InputAction.CallbackContext context);
            void OnRightTrigger(InputAction.CallbackContext context);
        }
    }
}
